{
  "fileContentMap": {
    "main.bal": "import ballerina/io;\n\npublic function main() returns error? {\n    string location = check getLocationInput();\n    WeatherData weather = check getWeatherData(location);\n    displayWeather(weather);\n}",
    "functions.bal": "import ballerina/io;\nimport ballerina/random;\n\nfunction getLocationInput() returns string|error {\n    io:print(\"Enter location: \");\n    string location = io:readln();\n\n    if location.trim().length() == 0 {\n        return error(\"Location cannot be empty\");\n    }\n\n    return location.trim();\n}\n\nfunction getWeatherData(string location) returns WeatherData|error {\n    // Mock weather service - in real application, this would call a weather API\n    float randFloat = random:createDecimal();\n    int randInt = check random.createIntInRange(0, 30);\n\n    string[] conditions = [\"Sunny\", \"Cloudy\", \"Rainy\", \"Partly Cloudy\", \"Thunderstorm\", \"Foggy\"];\n    string[] directions = [\"North\", \"South\", \"East\", \"West\", \"Northeast\", \"Northwest\", \"Southeast\", \"Southwest\"];\n\n    WeatherData weather = {\n        location: location,\n        temperature: 15.0 + (randFloat * 25.0),\n        condition: conditions[randInt],\n        humidity: 30 + randInt,\n        windSpeed: randFloat * 30.0,\n        windDirection: directions[randInt]\n    };\n\n    return weather;\n}\n\nfunction getWeatherAdvice(WeatherData weather) returns string {\n    if weather.condition == \"Rainy\" || weather.condition == \"Thunderstorm\" {\n        return \"Advice: Don't forget your umbrella!\";\n    } else if weather.temperature > 30.0 {\n        return \"Advice: It's hot outside, stay hydrated!\";\n    } else if weather.temperature < 10.0 {\n        return \"Advice: Bundle up, it's quite cold!\";\n    } else if weather.condition == \"Sunny\" {\n        return \"Advice: Perfect weather for outdoor activities!\";\n    } else {\n        return \"Advice: Have a great day!\";\n    }\n}\n\nfunction displayWeather(WeatherData weather) {\n    io:println(\"Weather for \" + weather.location);\n    io:println(\"Temperature: \", weather.temperature, \"Â°C\");\n    io:println(\"Condition: \", weather.condition);\n    io:println(\"Humidity: \", weather.humidity, \"%\");\n    io:println(\"Wind: \", weather.windSpeed, \" km/h \", weather.windDirection);\n}"
  },
  "projectPath": "proj",
  "fileName": "main.bal",
  "functionName": "main",
  "start": {
    "line": 1,
    "offset": 0
  },
  "end": {
    "line": 4,
    "offset": 1
  },
  "description": "Test diff when a new function is added in a different file and called from the main function.",
  "diagram": {
    "fileName": "main.bal",
    "nodes": [
      {
        "id": "35031",
        "metadata": {
          "label": "Start",
          "data": {
            "return": "error?"
          }
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 2,
              "offset": 38
            },
            "endLine": {
              "line": 6,
              "offset": 1
            }
          },
          "sourceCode": "public function main() returns error? {\n    string location = check getLocationInput();\n    WeatherData weather = check getWeatherData(location);\n    displayWeather(weather);\n}"
        },
        "returning": false,
        "branches": [],
        "flags": 0,
        "suggested": false
      },
      {
        "id": "34891",
        "metadata": {
          "label": "getLocationInput",
          "description": ""
        },
        "codedata": {
          "node": "FUNCTION_CALL",
          "org": "nipunaf",
          "module": "proj",
          "packageName": "proj",
          "symbol": "getLocationInput",
          "version": "0.1.0",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 3,
              "offset": 4
            },
            "endLine": {
              "line": 3,
              "offset": 47
            }
          },
          "sourceCode": "string location = check getLocationInput();"
        },
        "returning": false,
        "branches": [],
        "properties": {
          "view": {
            "metadata": {
              "label": "View",
              "description": "Function definition location"
            },
            "valueType": "VIEW",
            "value": {
              "fileName": "functions.bal",
              "startLine": {
                "line": 3.0,
                "offset": 0.0
              },
              "endLine": {
                "line": 12.0,
                "offset": 1.0
              }
            },
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Trigger error flow"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": true,
            "advanced": true,
            "hidden": true
          },
          "variable": {
            "metadata": {
              "label": "Variable Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "location",
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "lineRange": {
                "fileName": "main.bal",
                "startLine": {
                  "line": 3,
                  "offset": 11
                },
                "endLine": {
                  "line": 3,
                  "offset": 19
                }
              }
            }
          },
          "type": {
            "metadata": {
              "label": "Variable Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string",
            "placeholder": "var",
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false,
            "codedata": {}
          }
        },
        "flags": 1,
        "suggested": false
      },
      {
        "id": "35893",
        "metadata": {
          "label": "getWeatherData",
          "description": ""
        },
        "codedata": {
          "node": "FUNCTION_CALL",
          "org": "nipunaf",
          "module": "proj",
          "packageName": "proj",
          "symbol": "getWeatherData",
          "version": "0.1.0",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 4,
              "offset": 4
            },
            "endLine": {
              "line": 4,
              "offset": 57
            }
          },
          "sourceCode": "WeatherData weather = check getWeatherData(location);"
        },
        "returning": false,
        "branches": [],
        "properties": {
          "view": {
            "metadata": {
              "label": "View",
              "description": "Function definition location"
            },
            "valueType": "VIEW",
            "value": {
              "fileName": "functions.bal",
              "startLine": {
                "line": 14.0,
                "offset": 0.0
              },
              "endLine": {
                "line": 32.0,
                "offset": 1.0
              }
            },
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false
          },
          "location": {
            "metadata": {
              "label": "Location"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "value": "location",
            "placeholder": "\"\"",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "REQUIRED",
              "originalName": "location"
            },
            "typeMembers": [
              {
                "type": "string",
                "packageInfo": "",
                "packageName": "",
                "kind": "BASIC_TYPE",
                "selected": true
              }
            ]
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Trigger error flow"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": true,
            "advanced": true,
            "hidden": true
          },
          "variable": {
            "metadata": {
              "label": "Variable Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "weather",
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "lineRange": {
                "fileName": "main.bal",
                "startLine": {
                  "line": 4,
                  "offset": 16
                },
                "endLine": {
                  "line": 4,
                  "offset": 23
                }
              }
            }
          },
          "type": {
            "metadata": {
              "label": "Variable Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "WeatherData",
            "placeholder": "var",
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false,
            "codedata": {}
          }
        },
        "flags": 1,
        "suggested": false
      },
      {
        "id": "36856",
        "metadata": {
          "label": "displayWeather",
          "description": ""
        },
        "codedata": {
          "node": "FUNCTION_CALL",
          "org": "nipunaf",
          "module": "proj",
          "packageName": "proj",
          "symbol": "displayWeather",
          "version": "0.1.0",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 5,
              "offset": 4
            },
            "endLine": {
              "line": 5,
              "offset": 28
            }
          },
          "sourceCode": "displayWeather(weather);"
        },
        "returning": false,
        "branches": [],
        "properties": {
          "view": {
            "metadata": {
              "label": "View",
              "description": "Function definition location"
            },
            "valueType": "VIEW",
            "value": {
              "fileName": "functions.bal",
              "startLine": {
                "line": 48.0,
                "offset": 0.0
              },
              "endLine": {
                "line": 54.0,
                "offset": 1.0
              }
            },
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false
          },
          "weather": {
            "metadata": {
              "label": "Weather"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "WeatherData",
            "value": "weather",
            "placeholder": "{location: \"\", temperature: 0.0, condition: \"\", humidity: 0, windSpeed: 0.0, windDirection: \"\"}",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "REQUIRED",
              "originalName": "weather"
            },
            "typeMembers": [
              {
                "type": "WeatherData",
                "packageInfo": "nipunaf:proj:0.1.0",
                "packageName": "proj",
                "kind": "RECORD_TYPE",
                "selected": true
              }
            ]
          }
        },
        "flags": 0,
        "suggested": true
      }
    ],
    "connections": []
  }
}
